{"version":3,"sources":["components/Navbar.jsx","components/NavbarSmallScreen.jsx","actions/action.js","actions/types.js","components/ThemeToggle.jsx","layouts/Header.jsx","components/GitHubRepos.jsx","components/AboutMe.jsx","components/Greeting.jsx","components/Stack.jsx","components/Project.jsx","components/ProjectDetail.jsx","components/Projects.jsx","components/Alert.jsx","components/SendEmail.jsx","layouts/Main.jsx","layouts/Footer.jsx","components/AppWrapper.jsx","reducers/reducer.js","reducers/rootReducer.js","store/store.js","App.jsx","index.js"],"names":["Navbar","className","activeClass","to","spy","smooth","offset","duration","NavbarSmallScreen","useState","isOpen","setIsOpen","onClick","style","backgroundColor","top","transform","transition","opacity","visibility","getData","dispatch","a","axios","get","res","data","type","payload","connect","changeTheme","setTheme","darkMode","setDarkMode","htmlFor","cursor","marginBottom","color","fontSize","id","display","onChange","Header","title","defaultProps","GitHubRepos","repo","isDark","name","svn_url","private","target","href","AboutMe","aboutMeTitle","myData","repos","getRepos","useEffect","src","avatar","alt","text","contacts","discord","telegram","whats_up","map","key","state","myRepos","theme","portfolio_wallpaper","background","tech_stack","Object","values","el","width","logo","Project","info","cover","ProjectDetail","description","tech","github","web","projects","console","log","project","path","render","Alert","active","msg","getMailData","email","subject","message","dataMail","post","then","catch","isAlerted","alert","setAlert","mail","setMail","e","value","onSubmit","preventDefault","setTimeout","placeholder","rows","Footer","initialState","error","combineReducers","action","loading","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cd0e1b32.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-scroll';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navigation navigation-big\">\r\n      <ul>\r\n        <li>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"greeting\"\r\n            spy=\"true\"\r\n            smooth=\"true\"\r\n            offset={0}\r\n            duration=\"500\"\r\n          >\r\n            Greeting\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"about-me\"\r\n            spy=\"true\"\r\n            smooth=\"true\"\r\n            offset={0}\r\n            duration=\"500\"\r\n          >\r\n            About me\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"stack\"\r\n            spy=\"true\"\r\n            smooth=\"true\"\r\n            offset={0}\r\n            duration=\"500\"\r\n          >\r\n            Stack\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"projects\"\r\n            spy=\"true\"\r\n            smooth=\"true\"\r\n            offset={0}\r\n            duration=\"500\"\r\n          >\r\n            Projects\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"send-email\"\r\n            spy=\"true\"\r\n            smooth=\"true\"\r\n            offset={0}\r\n            duration=\"500\"\r\n          >\r\n            Get in touch!\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-scroll';\r\n\r\nconst NavbarSmallScreen = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"menu-wrapper\">\r\n      <div className=\"toggler\" onClick={() => setIsOpen(!isOpen)}>\r\n        <div\r\n          className=\"line first-line\"\r\n          style={{\r\n            backgroundColor: isOpen && '#a8dadc ',\r\n            top: isOpen && '50%',\r\n            transform: isOpen ? 'rotate(45deg)' : 'rotate(0)',\r\n            transition: isOpen\r\n              ? 'top 0.05s ease-in-out, transform 0.2s ease 0.035s, background-color 0.2s'\r\n              : 'transform 0.2s ease, top 0.15s ease-in-out 0.1s, background-color 0.2s ',\r\n          }}\r\n        ></div>\r\n        <div\r\n          className=\"line second-line\"\r\n          style={{\r\n            backgroundColor: isOpen && '#a8dadc',\r\n            opacity: isOpen ? 0 : 1,\r\n            transition: 'opacity .15s ease-in, background-color 0.2s',\r\n          }}\r\n        ></div>\r\n        <div\r\n          className=\"line third-line\"\r\n          style={{\r\n            backgroundColor: isOpen && '#a8dadc',\r\n            top: isOpen && '50%',\r\n            transform: isOpen ? 'rotate(-45deg)' : 'rotate(0)',\r\n            transition: isOpen\r\n              ? 'top 0.05s ease-in-out, transform 0.2s ease 0.035s, background-color 0.2s'\r\n              : 'transform 0.2s ease, top 0.15s ease-in-out 0.1s, background-color 0.2s',\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <nav\r\n        className=\"navigation navigation-small\"\r\n        style={{\r\n          transform: isOpen ? 'translateX(0)' : 'translatex(-100%)',\r\n          visibility: isOpen ? 'visible' : 'hidden',\r\n        }}\r\n      >\r\n        <div className=\"list-wrapper\">\r\n          <ul>\r\n            <li>\r\n              <Link\r\n                onClick={() => setIsOpen(false)}\r\n                activeClass=\"active\"\r\n                to=\"greeting\"\r\n                spy=\"true\"\r\n                smooth=\"true\"\r\n                offset={0}\r\n                duration=\"500\"\r\n              >\r\n                Greeting\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                onClick={() => setIsOpen(false)}\r\n                activeClass=\"active\"\r\n                to=\"about-me\"\r\n                spy=\"true\"\r\n                smooth=\"true\"\r\n                offset={0}\r\n                duration=\"500\"\r\n              >\r\n                About me\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                onClick={() => setIsOpen(false)}\r\n                activeClass=\"active\"\r\n                to=\"stack\"\r\n                spy=\"true\"\r\n                smooth=\"true\"\r\n                offset={0}\r\n                duration=\"500\"\r\n              >\r\n                Stack\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                onClick={() => setIsOpen(false)}\r\n                activeClass=\"active\"\r\n                to=\"projects\"\r\n                spy=\"true\"\r\n                smooth=\"true\"\r\n                offset={0}\r\n                duration=\"500\"\r\n              >\r\n                Projects\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                onClick={() => setIsOpen(false)}\r\n                activeClass=\"active\"\r\n                to=\"send-email\"\r\n                spy=\"true\"\r\n                smooth=\"true\"\r\n                offset={0}\r\n                duration=\"500\"\r\n              >\r\n                Get in touch!\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarSmallScreen;\r\n","import { GET_DATA, GET_REPOS, SET_THEME } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const changeTheme = (setTheme) => (dispatch) => {\r\n  dispatch({ type: SET_THEME, payload: setTheme });\r\n};\r\n\r\nexport const getRepos = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('https://api.github.com/users/amiloriss/repos');\r\n    const data = res.data;\r\n    dispatch({ type: GET_REPOS, payload: data });\r\n  } catch (error) { return error}\r\n};\r\n\r\nexport const getData = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      'https://portfolio-b1e46.firebaseio.com/portfolio.json'\r\n    );\r\n    const data = res.data;\r\n    dispatch({ type: GET_DATA, payload: data });\r\n  } catch (error) { return error}\r\n};\r\n\r\nexport const getMailData = (email, name, subject, message) => () => {\r\n  let dataMail = {\r\n    email,\r\n    name,\r\n    subject,\r\n    message,\r\n  };\r\n  axios\r\n    .post('/api/form', dataMail)\r\n    .then((res) => res)\r\n    .catch(() => {});\r\n};\r\n","export const GET_DATA = 'GET_DATA';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_THEME = 'SET_THEME';\r\n","import React, { useState } from 'react';\r\nimport { changeTheme } from '../actions/action';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ThemeToggle = ({ changeTheme }) => {\r\n  const [darkMode, setDarkMode] = useState(true);\r\n\r\n  const onToggle = () => {\r\n    setDarkMode(!darkMode);\r\n    changeTheme(darkMode);\r\n  };\r\n  return (\r\n    <label\r\n      htmlFor=\"toggle-theme\"\r\n      style={{\r\n        cursor: 'pointer',\r\n        marginBottom: 0,\r\n      }}\r\n    >\r\n      <i\r\n        style={{\r\n          color: darkMode ? '  #457b9d' : '#a8dadc',\r\n          fontSize: 35 + 'px',\r\n        }}\r\n        className={darkMode ? 'fas fa-moon' : 'fas fa-sun'}\r\n      ></i>\r\n      <input\r\n        id=\"toggle-theme\"\r\n        style={{ display: 'none' }}\r\n        onChange={onToggle}\r\n        type=\"checkbox\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default connect(null, { changeTheme })(ThemeToggle);\r\n","import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport NavbarSmallScreen from '../components/NavbarSmallScreen';\r\nimport PropTypes from 'prop-types';\r\nimport ThemeToggle from '../components/ThemeToggle';\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <header className=\"main-header\">\r\n      <NavbarSmallScreen />\r\n      <h1 className=\"title\">{title}</h1>\r\n      <Navbar />\r\n      <ThemeToggle />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Portfolio',\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst GitHubRepos = ({ repo, isDark }) => {\r\n  const { name, svn_url } = repo;\r\n  if (repo.private === true || name === 'amiloriss.github.io') {\r\n    return null;\r\n  } else\r\n    return (\r\n      <li>\r\n        <h5 style={{ transition: 'all 0.15s', color: isDark && '#a8dadc' }}>\r\n          {name}\r\n        </h5>\r\n        <a target=\"blank\" href={svn_url}>\r\n          hit the link\r\n        </a>\r\n      </li>\r\n    );\r\n};\r\n\r\nexport default GitHubRepos;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getData, getRepos } from '../actions/action';\r\nimport GitHubRepos from './GitHubRepos';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AboutMe = ({\r\n  aboutMeTitle,\r\n  myData: { data, repos },\r\n  getData,\r\n  getRepos,\r\n  isDark,\r\n}) => {\r\n  useEffect(() => {\r\n    getRepos();\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <section className=\"about-me\" id=\"about-me\">\r\n      <h2>\r\n        {aboutMeTitle} <i className=\"fas fa-user\"></i>\r\n      </h2>\r\n      <div className=\"information\">\r\n        <img src={data.avatar} alt=\"\" />\r\n        <p style={{ transition: 'all 0.15s', color: isDark && '#a8dadc' }}>\r\n          {data.text}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"contacts\">\r\n        <ul>\r\n          <li>\r\n            <i className=\"fab fa-discord\"></i>\r\n            {data.contacts.discord}\r\n          </li>\r\n          <li>\r\n            <i className=\"fab fa-telegram-plane\"></i>\r\n            {data.contacts.telegram}\r\n          </li>\r\n          <li>\r\n            <i className=\"fab fa-whatsapp-square\"></i>\r\n            {data.contacts.whats_up}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"github-repos\">\r\n        <ul>\r\n          {repos !== null\r\n            ? repos.map((repo) => {\r\n                return (\r\n                  <GitHubRepos isDark={isDark} key={repo.id} repo={repo} />\r\n                );\r\n              })\r\n            : null}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nAboutMe.defaultProps = {\r\n  aboutMeTitle: 'About me',\r\n};\r\n\r\nAboutMe.propTypes = {\r\n  aboutMeTitle: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myData: state.myData,\r\n    myRepos: state.myData,\r\n    isDark: state.myData.theme,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getData, getRepos })(AboutMe);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getData } from '../actions/action';\r\n\r\nconst Greeting = ({ myData: { portfolio_wallpaper }, getData }) => {\r\n  useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <section\r\n      style={{ background: `url(${portfolio_wallpaper})` }}\r\n      className=\"greeting\"\r\n      id=\"greeting\"\r\n    >\r\n      <h1 className=\"greeting-title\">\r\n        How is it going. I glad to see you on my website. Have enjoy.\r\n      </h1>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { myData: state.myData.data };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getData })(Greeting);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getData } from '../actions/action';\r\n\r\nconst Stack = ({ myData: { tech_stack }, isDark }) => {\r\n  useEffect(() => {\r\n    getData();\r\n    // eslint - disable - next - line;\r\n  }, []);\r\n  return (\r\n    <section className=\"stack\" id=\"stack\">\r\n      <h2>\r\n        Tech Stack <i className=\"fas fa-hammer\"></i>\r\n      </h2>\r\n      <ul className=\"tech-stack-list\">\r\n        {Object.values(tech_stack).map((el, id) => {\r\n          return (\r\n            <li key={id}>\r\n              <img width=\"80px\" src={el.logo} alt=\"logo\" />{' '}\r\n              <span\r\n                style={{ transition: 'all 0.15s', color: isDark && '#a8dadc' }}\r\n              >\r\n                {el.name}\r\n              </span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { myData: state.myData.data, isDark: state.myData.theme };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getData })(Stack);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Project = ({ info }) => {\r\n  const { name, cover } = info;\r\n  return (\r\n    <>\r\n      <Link to={`/${name}`}>\r\n        <li>\r\n          <div>\r\n            <img src={cover} alt=\"\" />\r\n          </div>\r\n        </li>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectDetail = ({ info }) => {\r\n  const { name, cover, description, tech, github, web } = info;\r\n  return (\r\n    <div className=\"project-detail\">\r\n      <Link to=\"/\">\r\n        <i className=\"fas fa-arrow-circle-left back-to-list\"></i>\r\n      </Link>\r\n      <h2>{name}</h2>\r\n      <div className=\"project-detail-wrapper\">\r\n        <img src={cover} alt=\"project\" />\r\n        <div className=\"description\">\r\n          <p className=\"descr-text\">{description}</p>\r\n          <p className=\"tech\">Technology I used: {tech}</p>\r\n          <div className=\"links\">\r\n            <a target=\"blank\" href={github}>\r\n              <i className=\"fab fa-github\"></i>\r\n            </a>\r\n            <a target=\"blank\" href={web}>\r\n              <i className=\"fas fa-globe-americas\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getData } from '../actions/action';\r\nimport Project from './Project';\r\nimport ProjectDetail from './ProjectDetail';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst Projects = ({ myData: { projects } }) => {\r\n  useEffect(() => {\r\n    getData();\r\n    // eslint-disable - next - line\r\n  }, []);\r\n  console.log();\r\n  return (\r\n    <section className=\"projects\" id=\"projects\">\r\n      <h2>\r\n        my projects <i className=\"fas fa-folder\"></i>\r\n      </h2>\r\n      <div className=\"projects-wrapper\">\r\n        <ul className=\"projects-list\">\r\n          {Object.values(projects).map((project) => {\r\n            return <Project key={project.id} info={project} />;\r\n          })}\r\n        </ul>\r\n      </div>\r\n\r\n      {Object.values(projects).map((project) => {\r\n        return (\r\n          <Route\r\n            path={`/${project.name}`}\r\n            render={() => {\r\n              return <ProjectDetail key={project.id} info={project} />;\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { myData: state.myData.data };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Projects);\r\n","import React from 'react';\r\n\r\nconst Alert = ({ active, msg }) => {\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div className={`alert ${active ? 'active' : 'not-active'}`}>{msg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMailData } from '../actions/action';\r\nimport Alert from './Alert';\r\n\r\nconst SendEmail = ({ getMailData, isDark }) => {\r\n  const [alert, setAlert] = useState({ msg: '', isAlerted: false });\r\n  const [mail, setMail] = useState({\r\n    email: '',\r\n    name: '',\r\n    subject: '',\r\n    message: '',\r\n  });\r\n  const onChange = (e) => {\r\n    setMail({ ...mail, [e.target.name]: e.target.value });\r\n  };\r\n  const { email, name, subject, message } = mail;\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === '' || name === '' || subject === '' || message === '') {\r\n      setAlert({ msg: 'Please fill the all fields', isAlerted: true });\r\n      setTimeout(() => {\r\n        setAlert({ msg: 'Please fill the all fields', isAlerted: false });\r\n      }, 3000);\r\n    } else {\r\n      getMailData(email, name, subject, message);\r\n      setAlert({ msg: 'Your mail has been sent', isAlerted: true });\r\n      setTimeout(() => {\r\n        setAlert({ msg: 'Your mail has been sent', isAlerted: false });\r\n      }, 3000);\r\n      setMail({ email: '', name: '', subject: '', message: '' });\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"send-email\" id=\"send-email\">\r\n      <h2>\r\n        Send Email To Me <i className=\"fas fa-envelope\"></i>\r\n      </h2>\r\n      <Alert msg={alert.msg} active={alert.isAlerted} />\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          style={{\r\n            transition: 'all 0.15s',\r\n            color: isDark && '#a8dadc',\r\n            backgroundColor: isDark && '#000',\r\n          }}\r\n          onChange={onChange}\r\n          placeholder=\"email\"\r\n          a\r\n          name=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n        />\r\n        <input\r\n          style={{\r\n            transition: 'all 0.15s',\r\n            color: isDark && '#a8dadc',\r\n            backgroundColor: isDark && '#000',\r\n          }}\r\n          onChange={onChange}\r\n          placeholder=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n        />\r\n        <input\r\n          style={{\r\n            transition: 'all 0.15s',\r\n            color: isDark && '#a8dadc',\r\n            backgroundColor: isDark && '#000',\r\n          }}\r\n          onChange={onChange}\r\n          placeholder=\"subject\"\r\n          name=\"subject\"\r\n          type=\"text\"\r\n          value={subject}\r\n        />\r\n        <textarea\r\n          style={{\r\n            transition: 'all 0.15s',\r\n            color: isDark && '#a8dadc',\r\n            backgroundColor: isDark && '#000',\r\n          }}\r\n          onChange={onChange}\r\n          placeholder=\"message\"\r\n          name=\"message\"\r\n          rows=\"6\"\r\n          value={message}\r\n        ></textarea>\r\n        <input type=\"submit\" value=\"send\" />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isDark: state.myData.theme,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getMailData })(SendEmail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AboutMe from '../components/AboutMe';\r\nimport Greeting from '../components/Greeting';\r\nimport Stack from '../components/Stack';\r\nimport Projects from '../components/Projects';\r\nimport SendEmail from '../components/SendEmail';\r\n\r\nconst Main = ({ isDark }) => {\r\n  return (\r\n    <main\r\n      style={{\r\n        transition: 'all 0.15s',\r\n        backgroundColor: isDark && '#000',\r\n      }}\r\n    >\r\n      <Greeting />\r\n\r\n      <div className=\"container\">\r\n        <AboutMe />\r\n        <Stack />\r\n        <Projects />\r\n        <SendEmail />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isDark: state.myData.theme };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <p>\r\n          2020 Developed By Me <span>&#9816;</span>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport Header from '../layouts/Header';\r\nimport Main from '../layouts/Main';\r\nimport Footer from '../layouts/Footer';\r\n\r\nimport { getData } from '../actions/action';\r\nimport { WaveLoading } from 'react-loadingg';\r\n\r\nconst AppWrapper = ({ myData, getData }) => {\r\n  useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (myData === null) {\r\n    return <WaveLoading color=\"#1d3557\" />;\r\n  } else\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Main />\r\n        <Footer />\r\n      </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myData: state.myData.data,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getData })(AppWrapper);\r\n","import { GET_DATA, GET_REPOS, SET_THEME } from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: null,\r\n  error: null,\r\n  repos: null,\r\n  theme: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_DATA:\r\n      return { ...state, data: action.payload, loading: false };\r\n    case GET_REPOS:\r\n      return { ...state, repos: action.payload };\r\n    case SET_THEME:\r\n      return { ...state, theme: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport rootReducer from './reducer';\r\n\r\nexport default combineReducers({ myData: rootReducer });\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './App.scss';\r\n\r\nimport AppWrapper from './components/AppWrapper';\r\n\r\nimport store from './store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <div className=\"main-container\">\r\n          <AppWrapper />\r\n        </div>\r\n      </Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}